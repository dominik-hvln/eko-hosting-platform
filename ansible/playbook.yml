- name: Pełny provisioning serwera hostingowego
  hosts: all
  become: yes
  vars:
    php_versions:
      - "8.2"
      - "8.1"
      - "7.4"

  tasks:
    - name: Zaktualizuj cache apt i zainstaluj podstawowe pakiety
      ansible.builtin.apt:
        name:
          - software-properties-common
          - ufw
        update_cache: yes

    - name: Dodaj repozytorium PPA dla PHP
      ansible.builtin.apt_repository:
        repo: "ppa:ondrej/php"
        state: present

    - name: Zainstaluj cały stos oprogramowania
      ansible.builtin.apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - nginx
        - mariadb-server
        - vsftpd
        - postfix
        - dovecot-core
        - dovecot-imapd
        - dovecot-pop3d
        - python3-pymysql
        - "php{{ item }}-fpm"
        - "php{{ item }}-mysql"
        - "php{{ item }}-cli"
        - "php{{ item }}-curl"
        - "php{{ item }}-gd"
        - "php{{ item }}-zip"
        - "php{{ item }}-mbstring"
        - "php{{ item }}-xml"

    - name: Upewnij się, że usługa MariaDB jest uruchomiona
      ansible.builtin.service:
        name: mariadb
        state: started
        enabled: yes

    # --- NOWA, NIEZAWODNA STRATEGIA DLA MARIADB ---
    - name: Zabezpiecz instalację MariaDB i ustaw hasło roota
      community.mysql.mysql_secure_installation:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        use_default_password: yes
        new_password: "{{ mysql_root_password }}"
        new_password_again: "{{ mysql_root_password }}"
        remove_anonymous_users: yes
        remove_test_database: yes
        disallow_root_login_remotely: yes
        reload_privilege_tables: yes
      no_log: true

    - name: Utwórz plik .my.cnf dla roota z nowym hasłem
      ansible.builtin.template:
        dest: /root/.my.cnf
        mode: '0600'
        content: |
          [client]
          user=root
          password={{ mysql_root_password }}
      no_log: true
    # --- KONIEC NOWEJ STRATEGII ---

    - name: Skopiuj skrypty pomocnicze
      ansible.builtin.copy:
        src: "scripts/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        mode: '0755'
      loop:
        - create_account.sh
        - manage_domain.sh
        - manage_database.sh

    - name: Skonfiguruj zaporę UFW
      community.general.ufw:
        rule: "{{ item.rule }}"
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      loop:
        - { rule: 'allow', port: 'ssh', proto: 'tcp' }
        - { rule: 'allow', port: 'http', proto: 'tcp' }
        - { rule: 'allow', port: 'https', proto: 'tcp' }
        - { rule: 'allow', port: '20', proto: 'tcp' }
        - { rule: 'allow', port: '21', proto: 'tcp' }
        - { rule: 'allow', port: '143', proto: 'tcp' }  # IMAP
        - { rule: 'allow', port: '993', proto: 'tcp' }  # IMAPS
        - { rule: 'allow', port: '110', proto: 'tcp' }  # POP3
        - { rule: 'allow', port: '995', proto: 'tcp' }  # POP3S
        - { rule: 'allow', port: '25', proto: 'tcp' }   # SMTP
        - { rule: 'allow', port: '587', proto: 'tcp' }  # SMTP Submission
        - { rule: 'allow', port: '465', proto: 'tcp' }  # SMTPS

    - name: Włącz UFW
      community.general.ufw:
        state: enabled
        policy: deny

    - name: Upewnij się, że kluczowe usługi są uruchomione i włączone przy starcie
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - nginx
        - mariadb
        - vsftpd
        - "php8.2-fpm"
        - "php8.1-fpm"
        - "php7.4-fpm"
        - postfix
        - dovecot