---
- hosts: all
  become: yes
  vars:
    php_versions:
      - "8.2"
      - "8.1"
      - "7.4"

  tasks:
    - name: 1. Konfiguracja Systemu Podstawowego
      block:
        - name: Dodaj repozytorium PPA dla PHP (ondrej/php)
          ansible.builtin.apt_repository:
            repo: ppa:ondrej/php
            state: present
            update_cache: yes

        - name: Zaktualizuj wszystkie pakiety systemowe
          ansible.builtin.apt:
            upgrade: dist
            update_cache: yes

    - name: 2. Instalacja Kluczowych Usług
      block:
        - name: Pre-konfiguracja dla Postfix (aby uniknąć interaktywnych pytań)
          ansible.builtin.debconf:
            name: postfix
            question: "{{ item.question }}"
            value: "{{ item.value }}"
            vtype: "{{ item.vtype }}"
          loop:
            - { question: 'postfix/main_mailer_type', value: 'Internet Site', vtype: 'select' }
            - { question: 'postfix/mailname', value: '{{ ansible_fqdn | default("localhost") }}', vtype: 'string' }

        - name: Zainstaluj Nginx, MariaDB, Serwer FTP i inne narzędzia
          ansible.builtin.apt:
            name:
              - nginx
              - mariadb-server
              - python3-pymysql
              - vsftpd
              - ufw
              - postfix
              - dovecot-core
              - dovecot-imapd
              - dovecot-pop3d
            state: latest

    - name: 3. Instalacja Wielu Wersji PHP i Modułów
      block:
        - name: Zainstaluj wiele wersji PHP-FPM oraz popularne rozszerzenia
          ansible.builtin.apt:
            name:
              - "php{{ item }}-fpm"
              - "php{{ item }}-mysql"
              - "php{{ item }}-cli"
              - "php{{ item }}-curl"
              - "php{{ item }}-gd"
              - "php{{ item }}-zip"
              - "php{{ item }}-mbstring"
              - "php{{ item }}-xml"
            state: present
          loop: "{{ php_versions }}"

    - name: 4. Hardening i Konfiguracja MariaDB
      block:
        - name: Zabezpiecz instalację MariaDB za pomocą bezpośredniego skryptu SQL
          ansible.builtin.shell: |
            mysql -u root <<EOF
            ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_root_password }}';
            DELETE FROM mysql.user WHERE User='';
            DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
            DROP DATABASE IF EXISTS test;
            DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
            FLUSH PRIVILEGES;
            EOF
          args:
            executable: /bin/bash
          changed_when: false

    - name: 5. Konfiguracja Firewall i Usług
      block:
        - name: Skonfiguruj firewall (UFW)
          community.general.ufw:
            rule: allow
            port: "{{ item }}"
          loop:
            - "ssh"
            - "http"
            - "https"
            - "21/tcp"
            - "25/tcp"
            - "143/tcp"
            - "993/tcp"
            - "110/tcp"
            - "995/tcp"

        - name: Upewnij się, że wszystkie kluczowe usługi są uruchomione i włączone
          ansible.builtin.service:
            name: "{{ item }}"
            state: started
            enabled: yes
          loop:
            - nginx
            - mariadb
            - vsftpd
            - postfix
            - dovecot
            - "php8.2-fpm"
            - "php8.1-fpm"
            - "php7.4-fpm"
            - ufw